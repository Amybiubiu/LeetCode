// 小A随手写出了一个正整数n。他可以对这个数字做出如下操作：

// 1、 把这个数字除以一个数，且保证结果是大于1的正整数；

// 2、 把这个数字减去1。

// 小A想知道通过如上操作把这个数变成1的最小操作次数。

// 小王想要为自己的家选一个住址。现在他已经选定了一条街道，准备在街道的某个位置住下来。

// 小王对每个位置赋值了一个满意度。他希望选出一个连续长度为k的区间，其满意度之和是所有可选方案中的最大值。然后，小王将在居中的位置住下来。如果达到最大值的区域有多个，小王会选择靠前的一个（保证k为奇数，即一定存在居中的位置）

// 你的任务是求出这个位置在何处。

#include <bits/stdc++.h>
using namespace std;

int main(){
    int n, k;
    cin>>n;
    cin>>k;
    vector<int> a(n,0);
    for(int i = 0; i < n; i++){
        cin>>a[i];
    }
    int i = 0;
    int max = 0;
    int res = 0;
    while(i < n){
        int j = i;
        while(j < n && a[j] == a[i]){
            j++;
        }
        if(j - i >= k && a[j-1] > max){
            res = (i + i + k)/2 + 1;
            max = a[j-1];
        }
        i = j;
    }
    // 18%
    cout<<res<<endl;
    return 0;
}